{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/@openlayers/pepjs/dist/pep.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","a","h","Math","log","f","exp","u","sqrt","max","floor","min","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","content","options","hmr","transform","insertInto","undefined","locals","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","fn","memo","stylesInDom","isOldIE","window","document","atob","arguments","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","createEvent","initEvent","bubbles","cancelable","buttons","pressure","clientX","y","clientY","pointerId","width","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","detail","PointerMap","Map","SparseArrayMap","array","size","set","k","delete","has","callback","thisArg","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","events","register","element","es","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","listen","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","elementChanged","oldValue","concatLists","accum","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","added","addedNodes","removed","removedNodes","attrib2css","selector","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","abs","dy","prepareEvent","pd","webkitForce","WEBKIT_FORCE_AT_MOUSE_DOWN","prepareButtonsForMove","which","mousedown","button","webkitmouseforcechanged","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","evts","oldSt","scrollTypes","UP","includes","DOWN","LEFT","RIGHT","touchAction","split","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","removePrimaryPointer","inPointer","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","altitudeAngle","tan","radToDeg","PI","atan","cos","azimuthAngle","sin","touchType","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","currentTarget","dya","dxa","left","right","findTouch","inTL","inId","vacuumTouches","touches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchforcechange","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","setTimeout","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","assertConnected","elem","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","textContent","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding","factory","util_abstract","uidCounter_","getUid","ol_uid","String","extendStatics","VERSION","__extends","b","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","assert","assertion","errorCode","obj_assign","assign","var_sources","TypeError","output","ii","getValues","values","isEmpty","listener","opt_this","opt_once","originalListener_1","eventsKey","listenOnce","unlistenByKey","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","RESIZE","WHEEL","ObjectEventType","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","numberSafeCompareFunction","linearFindNearest","arr","direction","reverseSubArray","begin","end","tmp","extend","extension","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","Event","BaseEvent","propagationStopped","stopPropagation","Target_extends","events_Target","Target","opt_target","target_","pendingRemovals_","dispatching_","listeners_","listeners","evt","pendingRemovals","getListeners","hasListener","opt_type","Observable_extends","ol_Observable","Observable","revision_","getRevision","on","len","once","un","Object_extends","ObjectEvent","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","CollectionEventType","ADD","REMOVE","Collection_extends","Property","CollectionEvent","opt_element","opt_index","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","removeAt","prev","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel_","coordinate_","dragging","getEventPixel","pixel","configurable","getCoordinateFromPixel","coordinate","ua","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","IMAGE_DECODE","Image","decode","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","clearTimeout","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","Infinity","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","modulo","lerp","createExtent","extent","onlyCenter","smooth","center","resolution","opt_isMoving","viewWidth","viewHeight","ratio","none","Relationship","UNKNOWN","INTERSECTING","ABOVE","BELOW","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsExtent","extent1","extent2","containsXY","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinate","extendCoordinates","coordinates","extendXY","getBottomLeft","getBottomRight","getCenter","getForViewAndSize","rotation","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getHeight","getIntersection","intersection","extent_intersects","getTopLeft","getTopRight","getWidth","extent_isEmpty","applyTransform","transformFn","xs","ys","_boundingExtentXYs","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeOut","easeIn","inAndOut","linear","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","toEPSG4326","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","projections_cache","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","opt_projection","proj_transform","equivalent","projection1","projection2","equalUnits","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","proj_userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","area","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","point1","point2","intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","currentCenter","currentResolution","opt_rotation","metrics","getComputedStyle","parseInt","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","fit","geometryOrExtent","userProjection","fitInternal","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerOnInternal","centerX","centerY","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","newNode","oldNode","replaceChild","removeNode","node","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","hasOverlay","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","LOADING","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","PluggableMap_extends","cache","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","labelCache_","labelCacheListenerKey_","overlays_","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","top","getTargetElement","getView","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","getSource","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","declutterItems","layerIndex","usedTiles","renderFrame","setLayerGroup","setSize","setView","computedStyle","offsetWidth","parseFloat","offsetHeight","Control_extends","control_Control","Control","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontParameters","font","family","fontFamily","fontWeight","fontStyle","families","weight","Layer_extends","inView","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","atan2","getDistance","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","defaultCondition","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","context","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromString","cacheSize","color","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","Number","fromStringInternal_","asArray","color_toString","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","asColorLike","measureFont","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","setInterval","div","heights","measureTextHeight","margin","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","radius","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","calculateMatrices2D","thisArg2","translatedCoordinate","offsets","projectionExtent","worldWidth","declutteredFeatures","numLayers","tmpCoord","getWrapX","callback_1","declutterTree","items","zIndexItems","renderDeclutter","renderDeclutterItems","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","labelCacheKey_","children_","previousElement","childElementCount","lastElementChild","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","format_Feature","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","FormatType","ARRAY_BUFFER","TEXT","XML","JSONFeature_extends","getObject","parse","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","MultiLineString_extends","geom_MultiLineString","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","getPoints","points","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","withCredentials","featureloader_xhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","loadFeaturesXhr","addFeatures","loadingstrategy_all","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","setState","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","rbush_min_default","items_","extents","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","Vector_extends","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","setLoader","setUrl","ImageState","IDLE","LOADED","EMPTY","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getRadius","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","IconAnchorUnits","FRACTION","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","IconImage_extends","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","imageState_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroups_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroups","hitDetectionImage","origin","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","Text","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","placement","flatOffset","flatEnd","oo","range","declutterGroup","drawChars_","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","fillKey","baseline","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","Executor_extends","tmpExtent","Executor_tmpTransform","p1","p2","p3","p4","canvas_Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","origin_1","repeatSize","save","restore","groupCount","box","declutterData","currentAlpha","drawTextImageWithPointPlacement_","execute_","featureCallback","opt_hitExtent","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","declutterGroupIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","clearRect","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","renderer_Layer_extends","renderer_Layer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","err","Uint8Array","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","makeScale","canvasTransform","vectorSource","clipped","layerExtent","declutterReplays","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","replayDeclutter","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","gutter","getSquaredTolerance","dirty","userExtent","features_2","replayGroupInstructions","executorGroup","layer_Vector_extends","layer_Vector","VectorLayer","main_coordinates","getIcon","iconFeature","iconStyle","iconSource","getBackground","getData","async","response","fetch","json","console","updateCoordinates","iss_position","latitude","longitude","main_map","updateMap"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*!\n * PEP v0.5.3 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.PointerEventsPolyfill = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n\n    if (inDict.pressure !== undefined && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 1;\n    e.height = inDict.height || 1;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    e.detail = 0;\n    return e;\n  }\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = [];\n\n      // Order of conditions due to document.contains() missing in IE.\n      while (target != null && target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode;\n\n        // Touch: Do not propagate if node is detached.\n        if (!target) {\n          return;\n        }\n      }\n      if (propagateDown) {\n        targets.reverse();\n      }\n      targets.forEach(function(target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('gotpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('lostpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(s) {\n    return 'body /shadow-deep/ ' + s;\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n  var attrib2css = [\n    { selector: '[touch-action=\"none\"]', value: 'none' },\n    { selector: '[touch-action=\"auto\"]', value: 'auto' },\n    { selector: '[touch-action~=\"pan-x\"]', value: 'pan-x' },\n    { selector: '[touch-action~=\"pan-y\"]', value: 'pan-y' },\n    { selector: '[touch-action~=\"pan-up\"]', value: 'pan-up' },\n    { selector: '[touch-action~=\"pan-down\"]', value: 'pan-down' },\n    { selector: '[touch-action~=\"pan-left\"]', value: 'pan-left' },\n    { selector: '[touch-action~=\"pan-right\"]', value: 'pan-right' }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        styles += r.selector + rule(r.value) + '\\n';\n        if (hasShadowRoot) {\n          styles += shadowSelector(r.selector) + rule(r.value) + '\\n';\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'webkitmouseforcechanged',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      if ('webkitForce' in inEvent) {\n        e.pressure = inEvent.webkitForce - MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;\n      }\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID);\n\n      // Update buttons state after possible out-of-document mouseup.\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n\n    // This is called when the user force presses without moving x/y\n    webkitmouseforcechanged: function(inEvent) {\n      this.mousemove(inEvent);\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap;\n\n  // this should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // bitmask for _scrollType\n  var UP = 1;\n  var DOWN = 2;\n  var LEFT = 4;\n  var RIGHT = 8;\n  var AUTO = UP | DOWN | LEFT | RIGHT;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchforcechange',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function() {\n\n      // TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (typeof st === \"number\") {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n\n      // In some cases, an element is removed before a touchend.\n      // When this is the case, we should wait for the touchend before unlistening,\n      // because we still want pointer events to bubble up after removing from DOM.\n      if (pointermap$1.size > 0) {\n        var evts = this.events;\n        el.addEventListener('touchend', function() {\n          el._scrollType = undefined;\n          dispatcher.unlisten(el, evts);\n        });\n      } else {\n        el._scrollType = undefined;\n        dispatcher.unlisten(el, this.events);\n      }\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (typeof st === \"number\" && typeof oldSt === \"number\") {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (typeof oldSt === \"number\") {\n        this.elementRemoved(el);\n      } else if (typeof st === \"number\") {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      UP: function(s) {\n        return s.includes('pan-y') || s.includes('pan-up') ? UP : 0;\n      },\n      DOWN: function(s) {\n        return s.includes('pan-y') || s.includes('pan-down') ? DOWN : 0;\n      },\n      LEFT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-left') ? LEFT : 0;\n      },\n      RIGHT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-right') ? RIGHT : 0;\n      }\n    },\n    touchActionToScrollType: function(touchAction) {\n      if (!touchAction) {\n        return;\n      }\n\n      if (touchAction === \"auto\") {\n        return AUTO;\n      }\n\n      if (touchAction === \"none\") {\n        return 0;\n      }\n\n      var s = touchAction.split(' ');\n      var st = this.scrollTypes;\n\n      // construct a bitmask of allowed scroll directions\n      return st.UP(s) | st.DOWN(s) | st.LEFT(s) | st.RIGHT(s);\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove' || type === 'touchforcechange') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force !== undefined ?\n        inTouch.force :\n        inTouch.webkitForce !== undefined ?\n          inTouch.webkitForce : undefined;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      if (inTouch.altitudeAngle) {\n        var tan = Math.tan(inTouch.altitudeAngle);\n        var radToDeg = 180 / Math.PI;\n        e.tiltX = Math.atan(Math.cos(inTouch.azimuthAngle) / tan) * radToDeg;\n        e.tiltY = Math.atan(Math.sin(inTouch.azimuthAngle) / tan) * radToDeg;\n      } else {\n        e.tiltX = 0;\n        e.tiltY = 0;\n      }\n      if (inTouch.touchType === 'stylus') {\n        e.pointerType = 'pen';\n      } else {\n        e.pointerType = this.POINTER_TYPE;\n      }\n\n      // forward modifier keys\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var st = inEvent.currentTarget._scrollType;\n        if (st === 0) {\n\n          // this element is a `touch-action: none`, should never scroll\n          ret = false;\n        } else if (st === AUTO) {\n\n          // this element is a `touch-action: auto`, should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          var dy = t.clientY - this.firstXY.Y;\n          var dya = Math.abs(dy);\n          var dx = t.clientX - this.firstXY.X;\n          var dxa = Math.abs(dx);\n\n          var up = st & UP;\n          var down = st & DOWN;\n          var left = st & LEFT;\n          var right = st & RIGHT;\n\n          if (left && right) {\n\n            // should scroll on the x axis\n            ret = dxa > dya;\n          } else if (left) {\n\n            // should scroll left\n            ret = dxa > dya && dx > 0;\n          } else if (right) {\n\n            // should scroll right\n            ret = dxa > dya && dx < 0;\n          }\n\n          if (!ret) {\n            if (up && down) {\n\n              // should scroll on the y axis\n              ret = dxa < dya;\n            } else if (up) {\n\n              // should scroll up\n              ret = dxa < dya && dy > 0;\n            } else if (down) {\n\n              // should scroll down\n              ret = dxa < dya && dy < 0;\n            }\n          }\n\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n\n    // Called when pressure or tilt changes without the x/y changing\n    touchforcechange: function(inEvent) {\n      this.touchmove(inEvent);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          if (inEvent.type !== 'touchforcechange') {\n            inEvent.preventDefault();\n          }\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n    touchEvents.elementChanged, touchEvents);\n\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('NotFoundError');\n      error.name = 'NotFoundError';\n      throw error;\n    }\n  }\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n    r = function(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~Event#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type ReturnType */\n    var lastResult;\n    /** @type Array<any> */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.target_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.target_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {Geometry|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {PointerEvent} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {PointerEvent}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport '@openlayers/pepjs';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        element.setAttribute('touch-action', 'none');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                tile.load();\n                if (tile.getState() === TileState.LOADING) {\n                    this.tilesLoadingKeys_[tileKey] = true;\n                    ++this.tilesLoading_;\n                    ++newLoads;\n                }\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform, getTransformFromProjections } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj/Projection.js\").default} [sourceProjection] The source projection.\n         * @param {import(\"../proj/Projection.js\").default} [destProjection] The destination projection.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, sourceProjection, destProjection) {\n            if (!sourceProjection || !destProjection) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var transform = getTransformFromProjections(sourceProjection, destProjection);\n            var clone = this.clone();\n            clone.applyTransform(transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj/Projection.js\").default} sourceProjection The source projection.\n     * @param {import(\"../proj/Projection.js\").default} destProjection The destination projection.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, sourceProjection, destProjection) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, sourceProjection, destProjection);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getSizeFromViewport_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry.clone().transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed,\n            hasOverlay: false\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\nimport { toUserCoordinate, fromUserCoordinate } from './proj.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        var handleMapBrowserEvent = _this.handleMapBrowserEvent.bind(_this);\n        for (var key in MapBrowserEventType) {\n            _this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        var handleBrowserEvent = _this.handleBrowserEvent.bind(_this);\n        _this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n        _this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent, false);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {import(\"./events/Target.js\").default}\n         */\n        _this.labelCache_ = null;\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheListenerKey_;\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n        this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels between\n        // the center of the tile and the center of the viewport.  The factor of 65536\n        // means that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var center = frameState.viewState.center;\n        var deltaX = tileCenter[0] - center[0];\n        var deltaY = tileCenter[1] - center[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {Array<string>} families\n * @property {string} style\n * @property {string} weight\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {FontParameters} The font families (or null if the input spec is invalid).\n */\nexport var getFontParameters = (function () {\n    var style;\n    /**\n     * @type {Object<string, FontParameters>}\n     */\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            var fontWeight = style.fontWeight;\n            var fontStyle = style.fontStyle;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            var families = family.split(/,\\s?/);\n            cache[font] = {\n                families: families,\n                weight: fontWeight,\n                style: fontStyle\n            };\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {boolean} hasOverlay Set by the renderer when an overlay for points and text is used.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { inView } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtentInternal(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n            map.getPixelFromCoordinateInternal(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 100;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var context = getMeasureContext();\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            context.font = fontStyle + ' ' + fontWeight + ' ' + size + referenceFont;\n            referenceWidth = context.measureText(text).width;\n            if (fontFamily != referenceFont) {\n                context.font = fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont;\n                var width = context.measureText(text).width;\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    if (labelCache.getCount()) {\n                        labelCache.clear();\n                    }\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (!(key in checked)) {\n                checked[key] = retries;\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checked[key] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureFont) {\n        measureContext.font = measureFont = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (opacity != 1) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        this.consumers = {};\n        _super.prototype.clear.call(this);\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { inView } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        var offsets = [[0, 0]];\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n            if (checkWrapped) {\n                offsets.push([-worldWidth, 0], [worldWidth, 0]);\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n                    if (layerRenderer && source) {\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { inView } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { labelCache } from '../render/canvas.js';\nimport EventType from '../events/EventType.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.labelCacheKey_ = listen(labelCache, EventType.CLEAR, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.labelCacheKey_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var hasOverlay = false;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            hasOverlay = hasOverlay || layerState.hasOverlay;\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            var childElementCount = element.childElementCount;\n            if ((element !== previousElement || i == ii - 1) && childElementCount === 2 && !hasOverlay) {\n                element.removeChild(element.lastElementChild);\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                hasOverlay = childElementCount === 2;\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\nimport Units from '../proj/Units.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection ?\n                getProjection(opt_options.dataProjection) : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection && dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.hitDetectionCanvas_ = this.canvas_;\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_ ?\n                    (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n                    null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][4])++;\n            }\n            else {\n                declutter = this.declutterGroups_ = [createEmpty()];\n                declutter[0].push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = width + strokeWidth;\n            var context = createCanvasContext2D(\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            Math.ceil((renderWidth + 2) * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = strokeState.lineCap;\n                context.lineJoin = strokeState.lineJoin;\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        var context = declutterData[0];\n                        var currentAlpha = context.globalAlpha;\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = opacity;\n                        }\n                        if (declutterData.length > 11) {\n                            this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                        }\n                        drawImage.apply(undefined, declutterData);\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = currentAlpha;\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in getTextImage() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            if (declutterGroups.length < index + 1) {\n                                declutterGroup = createEmpty();\n                                declutterGroup.push(declutterGroups[0][4]);\n                                declutterGroups.push(declutterGroup);\n                            }\n                            declutterGroup = declutterGroups[index];\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                        if (declutterGroup) {\n                            if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[4];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        if (this.hitDetectionContext_) {\n            var canvas = this.hitDetectionContext_.canvas;\n            canvas.width = canvas.height = 0;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity\n                });\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform, toString as transformToString } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {import(\"../../transform\").Transform} transform Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transformToString(transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport { getUserProjection } from '../proj.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj/Projection.js\").default} [projection] The view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, projection) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, projection);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj/Projection.js\").default} [projection] The view projection.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, projection) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, getUserProjection(), projection);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent } from '../../extent.js';\nimport { fromUserExtent, toUserExtent, getUserProjection } from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clip(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            vectorSource.loadFeatures(toUserExtent(extent, projection), resolution, userProjection);\n        }\n        else {\n            vectorSource.loadFeatures(extent, resolution, projection);\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, projection);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(userExtent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(userExtent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj/Projection.js\").default} projection The view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, projection) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, projection) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, projection);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","import 'ol/ol.css';\nimport Feature from 'ol/Feature';\nimport Map from 'ol/Map';\nimport Point from 'ol/geom/Point';\nimport TileJSON from 'ol/source/TileJSON';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport {Icon, Style} from 'ol/style';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport {fromLonLat} from 'ol/proj';\n\n\nconst coordinates = [];\nconst url = 'http://api.open-notify.org/iss-now.json';\n\nconst getIcon = () => {\n  const iconFeature = new Feature({\n    geometry: new Point(fromLonLat(coordinates)),\n    name: 'iss'\n  }); \n  const iconStyle = new Style({\n    image: new Icon({\n      src: 'img/iss.png',\n    }),\n  });\n  iconFeature.setStyle(iconStyle);\n  const iconSource = new VectorSource({\n    features: [iconFeature],\n  });\n  return new VectorLayer({\n    source: iconSource\n  });\n}\n\nconst getBackground = () => {\n  return new VectorLayer({\n    source: new VectorSource({\n      format: new GeoJSON(),\n      url: './data/countries.json'\n    })\n  });\n}\n\nconst getMap = () => {\n  return new Map({\n    layers: [getBackground(), getIcon()],\n    target: document.getElementById('map'),\n    view: new View({\n      center: fromLonLat(coordinates),\n      zoom: 2,\n    }),\n  });\n}\n\nconst getData = async function ()  {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.log('Something went wrong', err);\n  }\n}\n\nconst updateCoordinates = (data) => {\n  const { iss_position : { latitude, longitude } } = data;\n  coordinates[0] = longitude;\n  coordinates[1] = latitude;\n}\n\nconst updateMap = () => {\n  const layers = map.getLayers().getArray();\n  layers.pop();\n  layers.push(getIcon());\n  map.render();\n}\n\n// Initialise map then keep updating\nlet map;\ngetData().then((data) => {\n  updateCoordinates(data);\n  map = getMap();\n\n  // Update every 5 seconds\n  setInterval(() => {\n    getData().then((data) => {\n      updateCoordinates(data);\n      updateMap();\n    })\n  }, 5000)\n})"],"sourceRoot":""}